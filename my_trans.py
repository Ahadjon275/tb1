#!/usr/bin/env python3


from py_trans import PyTranslator
from langdetect import detect, detect_langs
import subprocess
import gpt_basic
import re
import enchant


def count_russian_words_not_in_ukrainian_dict(text):
    """–°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ, —ç—Ç–∏ —Å–ª–æ–≤–∞ –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º –∏ –±–µ–ª–æ—Ä—É—Å—Å–∫–æ–º"""
    d_ru = enchant.Dict("ru_RU")
    d_uk = enchant.Dict("uk_UA")
    russian_words = []
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –∞–ª—Ñ–∞–≤–∏—Ç–∞—Ö, –Ω–∞ –ø—Ä–æ–±–µ–ª—ã
    text = re.sub(r"[^–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ—ë–Å]+", " ", text)
    for word in text.split():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–æ —Ä—É—Å—Å–∫–∏–º
        if d_ru.check(word) and not d_uk.check(word):
            russian_words.append(word)
    return len(russian_words)


def count_ukr_words(text):
    """–°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏—Ö—Å—è —Å —Ä—É—Å—Å–∫–∏–º–∏"""
    d_uk = enchant.Dict("uk_UA")
    d_ru = enchant.Dict("ru_RU")
    words = []
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –∞–ª—Ñ–∞–≤–∏—Ç–∞—Ö, –Ω–∞ –ø—Ä–æ–±–µ–ª—ã
    text = re.sub(r"[^–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ—ë–Å]+", " ", text)
    for word in text.split():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–æ —Ä—É—Å—Å–∫–∏–º
        if d_uk.check(word) and not d_ru.check(word):
            words.append(word)
    return len(words)


def detect_lang(text):
    """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç None –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, 2 –±—É–∫–≤–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –µ—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–æ—Å—å 'en', 'ru' –∏—Ç–ø """
    # –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è–∑—ã–∫–∞ = 8. –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ç–µ–∫—Å—Ç–∞—Ö –¥–µ—Ç–µ–∫—Ç–æ—Ä —Å–∏–ª—å–Ω–æ –≤—Ä—ë—Ç, –≤–æ–∑–º–æ–∂–Ω–æ 8 —ç—Ç–æ —Ç–æ–∂–µ –º–∞–ª–æ
    if sum(1 for word in text.split() if len(word) >= 2) < 8:
        # –µ—Å–ª–∏ –ø—Ä–æ–±–µ–ª–æ–≤ –æ—á–µ–Ω—å –º–∞–ª–æ —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ —è–∑—ã–∫ —Ç–∏–ø–∞ —è–ø–æ–Ω—Å–∫–æ–≥–æ
        if len(text) < 20 or text.count(' ') > len(text)/20:
            return None
    
    # c—á–∏—Ç–∞–µ–º –±–µ–ª–æ—Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã
    pattern = r'[–é—û–Ü—ñ–éÃÅ—ûÃÅ]'
    if len(re.findall(pattern, text)) > 3:
        return 'be' # –≤–æ–∑–º–æ–∂–Ω–æ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π –Ω–æ –Ω–∞–º –≤—Å—ë —Ä–∞–≤–Ω–æ, –≥–ª–∞–≤–Ω–æ–µ —á—Ç–æ –Ω–µ —Ä—É—Å—Å–∫–∏–π
    
    # –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –±–æ–ª—å—à–µ 2 —Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None
    if count_russian_words_not_in_ukrainian_dict(text) > 2:
        return None

    # –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –±–æ–ª—å—à–µ 2 —á–∏—Å—Ç–æ —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö —Å–ª–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 'uk'
    if count_ukr_words(text) > 2:
        return 'uk'

    # —Å–º–æ—Ç—Ä–∏–º —Å–ø–∏—Å–æ–∫ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π, –∏ –µ—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –µ—Å—Ç—å —Ä—É—Å—Å–∫–∏–π —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None (—Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π –Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º)
    #print(detect_langs(text))
    try:
        for i in detect_langs(text):
            if i.lang == 'ru':
                return None
    except Exception as e:
        print(e)
        return None

    try:
        language = detect(text)
    except Exception as e:
        print(e)
        return None
    return language


def translate_text(text, lang = 'ru'):
    """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç None –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å """
    x = PyTranslator()
    r = x.translate(text, lang)
    if r['status'] == 'success':
        return r['translation']
    return None
    

def translate_text2(text, lang = 'ru'):
    """ –ü–µ—Ä–µ–≤–æ–¥–∏—Ç text –Ω–∞ —è–∑—ã–∫ lang —Å –ø–æ–º–æ—â—å—é —É—Ç–∏–ª–∏—Ç—ã trans. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç None –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å """
    process = subprocess.Popen(['trans', f':{lang}', '-b', text], stdout = subprocess.PIPE)
    output, error = process.communicate()
    r = output.decode('utf-8').strip()
    if error != None:
        return None
    return r


def translate(text):
    """ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–¥–æ –ª–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–∏–π –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –µ—Å–ª–∏ –Ω–∞–¥–æ.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç None –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å """
    if text:
        d = detect_lang(text)
    else:
        return None
    # –ø–µ—Ä–µ–≤–æ–¥–∏–º –µ—Å–ª–∏ —è–∑—ã–∫ –Ω–µ —Ä—É—Å—Å–∫–∏–π –Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ
    if d and d != 'ru':
        # —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ—á–µ–º—É —Ç–æ –∑–∞–º–µ—Ç–Ω–æ —Ö—É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Ö–æ—Ç—è –≤—Ä–æ–¥–µ –±—ã —Ç–æ—Ç –∂–µ —Å–∞–º—ã–π –≥—É–≥–ª –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
        #return translate_text(text)
        
        #return gpt_basic.translate_text(text) or translate_text2(text) or None
        # –æ—Ç–∫–ª—é—á–∏–ª –ì–ü–¢, –æ–Ω —á–∞—Å—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç —Ü–µ–Ω–∑—É—Ä—É
        return translate_text2(text) or translate_text2(text) or None
    return None
    

if __name__ == "__main__":
    #text = '–Ω–æ—Ä–º–∞'
    #text = '–ö–æ–Ω–µ—á–Ω–æ, —è –º–æ–≥—É –Ω–∞–ø–∏—Å–∞—Ç—å –¥–≤–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º —è–∑—ã–∫–µ.'
    #text="""–ó–≤–∏—á–∞–π–Ω–æ, —è –º–æ–∂—É –Ω–∞–ø–∏—Å–∞—Ç–∏ –¥–≤–∞ —Ä–µ—á–µ–Ω–Ω—è –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π –º–æ–≤—ñ."""
    #text = "–í—ñ—Ç–∞—é! –Ø - —ñ–Ω—Ñ–∞—Ä–º–∞—Ü—ã–π–Ω–∞—è —Å—ñ—Å—Ç—ç–º–∞, —è–∫–∞—è –º–æ–∂–∞ –∞–¥–∫–∞–∑–∞—Ü—å –Ω–∞ –∑–∞–ø—ã—Ç–∞–Ω–Ω—ñ —û –≤–∞—Å. –Ø –Ω–µ –º–∞–≥—É —Ä–∞–∑–º–∞—û–ª—è—Ü—å –Ω–∞ –ª—é–¥—Å–∫–∞–π –º–æ–≤–µ, –∞–ª–µ –≤—ã –º–æ–∂–∞—Ü–µ –ø—ñ—Å–∞—Ü—å –º–Ω–µ –ø–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω—ñ –Ω–∞ –ª—é–±–æ–π –º–æ–≤–µ, —è–∫—É—é –≤—ã –≤–µ–¥–∞–µ—Ü–µ. –î–∑—è–∫—É–π –∑–∞ –∫–∞—Ä—ã—Å—Ç–∞–Ω–Ω–µ –º–Ω–æ–π!"
    #text = """Nach dem Abschluss der Schule begann Max, in einer Fabrik zu arbeiten, um Geld zu verdienen. Er sparte jeden Cent, den er konnte, um eines Tages sein Studium zu finanzieren. Nach ein paar Jahren hatte er genug Geld gespart, um sein Studium zu beginnen."""
    #text = "„Åì„Çì„Å´„Å°„ÅØ„ÄÅÁßÅ„ÅØAI„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„Å®„Åó„Å¶„ÄÅ„ÅÇ„Å™„Åü„ÅÆ„ÅäÊâã‰ºù„ÅÑ„Çí„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇÁßÅ„ÅØËá™ÁÑ∂Ë®ÄË™ûÂá¶ÁêÜÊäÄË°ì„ÇíÂà©Áî®„Åó„Å¶„ÄÅ„ÅÇ„Å™„Åü„ÅÆË≥™Âïè„ÇÑË¶ÅÊúõ„Å´Âøú„Åà„Åæ„Åô„ÄÇ„Å©„Çì„Å™„Åì„Å®„Åß„ÇÇ„ÅäÊ∞óËªΩ„Å´„ÅäËÅû„Åç„Åè„Å†„Åï„ÅÑ„ÄÇ„Çà„Çç„Åó„Åè„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô„ÄÇ"
    #text = 'ŸÖÿ±ÿ≠ÿ®ÿßÿå ÿ£ŸÜÿß ŸÖÿ≥ÿßÿπÿØ ÿ∞ŸÉÿßÿ° ÿßÿµÿ∑ŸÜÿßÿπŸä ŸàŸäŸÖŸÉŸÜŸÜŸä ŸÖÿ≥ÿßÿπÿØÿ™ŸÉ ŸÅŸä ÿ£Ÿä ÿ¥Ÿäÿ° ÿ™ÿ≠ÿ™ÿßÿ¨ ÿ•ŸÑŸäŸá. ÿ£ÿ≥ÿ™ÿÆÿØŸÖ ÿ™ŸÇŸÜŸäÿßÿ™ ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿ∑ÿ®ŸäÿπŸäÿ© ŸÑŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿπŸÑŸâ ÿ£ÿ≥ÿ¶ŸÑÿ™ŸÉ Ÿàÿ∑ŸÑÿ®ÿßÿ™ŸÉ. ŸÑÿß ÿ™ÿ™ÿ±ÿØÿØ ŸÅŸä ÿ≥ÿ§ÿßŸÑŸä ÿ£Ÿä ÿ¥Ÿäÿ°. ÿ¥ŸÉÿ±ÿß ŸÑŸÉ.'
    text = """[ –ê–ª—å–±–æ–º ]
‚ö°Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä —à–∫–æ–ª—ã, –∫—É–¥–∞ –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –∑–≤–∞—Ç—å Z-–∞–≥–∏—Ç–∞—Ç–æ—Ä–æ–≤, —É—Ö–æ–¥–∏—Ç –≤ –æ—Ç—Å—Ç–∞–≤–∫—É

–ò–∑ —à–∫–æ–ª—ã ‚Ññ12 —Å —É–≥–ª—É–±–ª—ë–Ω–Ω—ã–º –∏–∑—É—á–µ–Ω–∏–µ–º –Ω–µ–º–µ—Ü–∫–æ–≥–æ –≤ –∑–Ω–∞–∫ –ø—Ä–æ—Ç–µ—Å—Ç–∞ —É–≤–æ–ª—å–Ω—è—é—Ç—Å—è –∏ —É—á–∏—Ç–µ–ª—è. –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è.

–û–± —ç—Ç–æ–º —Å–æ–æ–±—â–∞—é—Ç –Ω–∞—à–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏. –¢–∞–∫–∂–µ –æ–± —ç—Ç–æ–º –ø–∏—à–µ—Ç Z-–∫–∞–Ω–∞–ª ¬´–ü—Ä–∏–∫–∞–º—Å–∫–∏–µ –≤–∏—Ç—è–∑–∏¬ª, –∫–æ—Ç–æ—Ä—ã–π –∏ –Ω–∞—á–∞–ª —Ç—Ä–∞–≤–ª—é —à–∫–æ–ª—ã –∏–∑-–∑–∞ ¬´–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –ø–∞—Ç—Ä–∏–æ—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—è¬ª.

üí¨ –í—á–µ—Ä–∞ —Å–æ—Å—Ç–æ—è–ª–æ—Å—å —Å–æ–±—Ä–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ —Å–æ–≤–µ—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –Ω–µ —Ç–æ–ª—å–∫–æ –µ–≥–æ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ —á–ª–µ–Ω—ã, –Ω–æ –∏ —Ä–æ–¥–∏—Ç–µ–ª–∏ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∫–æ–ª—ã –≤ –ª–∏—Ü–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –∏ —É—á–∏—Ç–µ–ª–µ–π —à–∫–æ–ª—ã, –ø—Ä–∏–Ω—è–≤—à–∏–µ –Ω–∞ —Å–µ–±—è ¬´—É–¥–∞—Ä¬ª, –Ω–µ –º–æ–≥—É—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å–≤–æ—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–ª–æ–∂–∏–≤—à–∏—Ö—Å—è —É—Å–ª–æ–≤–∏—è—Ö –∏ –ø–æ–∫–∏–¥–∞—é—Ç –µ—ë —Å—Ç–µ–Ω—ã. –ò —ç—Ç–æ –æ–¥–Ω–∏ –∏–∑ –ª—É—á—à–∏—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π –ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ —à–∫–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–¥–µ–ª–∞–ª–∏ –µ–π –∏–º—è –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ –¥–ª—è –Ω–µ—ë –∑–Ω–∞–∫ –ø–æ—á—ë—Ç–∞, ‚Äî –ø—É–±–ª–∏–∫—É—é—Ç –ø–∏—Å—å–º–æ –æ–¥–Ω–æ–π –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω–∏—Ü —É —Å–µ–±—è ¬´–≤–∏—Ç—è–∑–∏¬ª.

–í –ø–∏—Å—å–º–µ —Ç–∞–∫–∂–µ —Å–∫–∞–∑–∞–Ω–æ, —á—Ç–æ —Ä–æ–¥–∏—Ç–µ–ª–∏ –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–º –∏ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –±–æ—Ä–æ—Ç—å—Å—è –∑–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –∏ —É—á–∏—Ç–µ–ª–µ–π. –ù–∞ –∑–∞–±–æ—Ä–µ —à–∫–æ–ª—ã —É—á–µ–Ω–∏–∫–∏, —Ä–æ–¥–∏—Ç–µ–ª–∏ –∏ –≤—ã–ø—É—Å–∫–Ω–∏–∫–∏ –≤—ã–≤–µ—à–∏–≤–∞—é—Ç –ø–ª–∞–∫–∞—Ç—ã –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞.

–®–∫–æ–ª–∞ –∏–ª–∏ –≤–ª–∞—Å—Ç–∏ –ø–æ–∫–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –Ω–µ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–∏–∑–æ—à–µ–¥—à–µ–µ. –°–∞–º–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä —Ç–∞–∫–∂–µ –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–±—â–∞—Ç—å—Å—è —Å–æ –°–ú–ò.

üí¨ –ú—ã –ø—ã—Ç–∞–µ–º—Å—è –≤—ã—è—Å–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏. –ï—Å–ª–∏ –≤–∞–º —á—Ç–æ-—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–º –∏ –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ –±–æ—Ç (http://t.me/perm_366_bot).

‚û°Ô∏è ¬´–ü–µ—Ä–º—å 36,6¬ª (https://t.me/perm36) ‚Äî –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏ –∑–¥–æ—Ä–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å|—Ä–µ–∫–ª–∞–º—É ‚Äî @perm_366_bot"""
    
    #print(translate_text2(text, 'en'))
    
    #print(translate_text(text))
    #print(translate_text2(text))

    print(translate(text))

    #print(detect_lang('—ñ—Å—Ç–æ—Ä—ñ—î—é —Ç–∞ –∫—É–ª—å—Ç—É—Ä–æ—é. –¢–æ–ª—å–∫–æ –Ω–µ –≥–æ–≤–æ—Ä–∏ —á—Ç–æ –Ω–∞–¥–æ'))
    #print(detect_langs(text)[0].lang)
