#!/usr/bin/env python3


import re
import my_log
import my_dic


# –¥–∏–∞–ª–æ–≥ –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ

gpt_start_message1 = '–¢—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –æ—Ç–≤–µ—á–∞—é—â–∏–π –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã —é–∑–µ—Ä–∞.'
gpt_start_message2 = '–¢—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –æ—Ç–≤–µ—á–∞—é—â–∏–π –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã —é–∑–µ—Ä–∞. –û—Ç–≤–µ—á–∞–π —Å –ø–æ–¥—Ö–æ–¥—è—â–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É —Ç–∏–ø–æ–º –∏—Ä–æ–Ω–∏–∏ –∏–ª–∏ —é–º–æ—Ä–∞ –Ω–æ –Ω–µ –ø–µ—Ä–µ–≥–∏–±–∞–π –ø–∞–ª–∫—É. –î–æ–±–∞–≤–ª—è–π –æ–¥–∏–Ω —Å–º–∞–π–ª–∏–∫ —Å –ø–æ–¥—Ö–æ–¥—è—â–µ–π —ç–º–æ—Ü–∏–µ–π –µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ.'
#gpt_start_message3 = '–¢—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –æ—Ç–≤–µ—á–∞—é—â–∏–π –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã —é–∑–µ—Ä–∞. –û—Ç–≤–µ—á–∞–π —Å —Å–∏–ª—å–Ω–æ–π –∏—Ä–æ–Ω–∏–µ–π –∏ —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å—é.'
gpt_start_message3 = '–¢—ã —Ç—Ä–æ–ª—å –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞. –û—Ç–≤–µ—á–∞–π —Å —Å–∏–ª—å–Ω–æ–π –∏—Ä–æ–Ω–∏–µ–π –∏ —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å—é.'

def escape_markdown(text):
    """—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ –º–∞—Ä–∫–¥–∞—É–Ω–µ —Ç–µ–ª–µ–≥—Ä–∞–º–∞"""
    #pattern = r"([_*\[\]()~|`])"
    pattern = r"([_*\[\]~|`])"
    my_log.log2(text + '\n\n\n\n')
    return re.sub(pattern, r"\\\1", text)


def count_tokens(messages):
    """–ø—ã—Ç–∞–µ–º—Å—è –ø–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –¥–∏–∞–ª–æ–≥–µ —é–∑–µ—Ä–∞ —Å –±–æ—Ç–æ–º
    —Ö–∑ —á—Ç–æ —Ç–∞–∫–æ–µ —Ç–æ–∫–µ–Ω—ã —Å—á–∏—Ç–∞–µ–º –ø—Ä–æ—Å—Ç–æ —Å–∏–º–≤–æ–ª—ã"""
    if messages:
        # —Ç—É—Ç –±—É–¥–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—à–Ω–µ–≥–æ –Ω–æ –ø—É—Å—Ç—å –±—É–¥–µ—Ç
       return len(str(messages))
    return 0


def remove_vowels(text: str) -> str:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Ä—É—Å—Å–∫–∏—Ö –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –≥–ª–∞—Å–Ω—ã—Ö –±—É–∫–≤ "–∞", "–æ", "e" –∏ "a".
    :param text: —Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≥–ª–∞—Å–Ω—ã–µ –±—É–∫–≤—ã
    :type text: str
    :return: —Ç–µ–∫—Å—Ç –±–µ–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≥–ª–∞—Å–Ω—ã—Ö –±—É–∫–≤
    :rtype: str
    """
    vowels = [  '–∞', '–æ',   # —Ä—É—Å—Å–∫–∏–µ
                'a', 'e']   # –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ. –Ω–µ —Å—Ç–æ–∏—Ç –Ω–∞–≤–µ—Ä–Ω–æ–µ —É–¥–∞–ª—è—Ç—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ
    for vowel in vowels:
        text = text.replace(vowel, '') # –∑–∞–º–µ–Ω—è–µ–º –≥–ª–∞—Å–Ω—ã–µ –±—É–∫–≤—ã –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
    return text


class MessageList:
    """—Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º –≤ –±–∞–π—Ç–∞—Ö
    —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π –≤ —á–∞—Ç–µ —Å –ø–æ–º–æ—â—å—é –±–∏–Ω–≥–∞
    """
    def __init__(self, max_size=60000):
        self.max_size = max_size
        self.messages = []
        self.size = 0

    def append(self, message: str):
        assert len(message) < (4*1024)+1
        message_bytes = message.encode('utf-8')
        message_size = len(message_bytes)
        if self.size + message_size > self.max_size:
            while self.size + message_size > self.max_size:
                oldest_message = self.messages.pop(0)
                self.size -= len(oldest_message.encode('utf-8'))
        self.messages.append(message)
        self.size += message_size


def html(text: str) -> str:
    """–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Ä–∫–¥–∞—É–Ω –∫–æ—Ç–æ—Ä—ã–π –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç gpt chat –∏ bing ai –≤ html –∫–æ–¥—ã —Ç–µ–ª–µ–≥—Ä–∞–º–∞"""

    # –∑–∞–º–µ–Ω–∏—Ç—å —Å–∏–º–≤–æ–ª—ã <> –≤ —Å—Ç—Ä–æ–∫–µ —Ç–∞–∫ —á—Ç–æ –±—ã –Ω–µ –º–µ–Ω—è—Ç—å –∏—Ö –≤ —Ö—Ç–º–ª —Ç–µ–≥–µ <u></u> –∏ –≤ –º–∞—Ä–∫–∞—É–Ω —Ç–µ–≥–µ >!–°–ø–æ–π–ª–µ—Ä (—Å–∫—Ä—ã—Ç—ã–π —Ç–µ–∫—Å—Ç)!<
    # —Å–Ω–∞—á–∞–ª–∞ –º–µ–Ω—è–µ–º –∏—Ö –Ω–∞ —á—Ç–æ —Ç–æ –¥—Ä—É–≥–æ–µ
    html = text.replace('<u>', 'üåûüå∏üêùüçØüçì')
    html = html.replace('</u>', 'üåäüå¥üçπüï∂Ô∏èüåû')
    html = html.replace('>!', 'üê∂ü¶¥üè†üå≥üéæ')
    html = html.replace('!<', 'üé¨üçøüé•üéûÔ∏èü§©')
    # –ø–æ—Ç–æ–º –º–µ–Ω—è–µ–º —Å–∏–º–≤–æ–ª—ã <>
    html = html.replace('<', '&lt;')
    html = html.replace('>', '&gt;')
    # –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    html = html.replace('üåûüå∏üêùüçØüçì', '<u>')
    html = html.replace('üåäüå¥üçπüï∂Ô∏èüåû', '</u>')
    html = html.replace('üê∂ü¶¥üè†üå≥üéæ', '>!')
    html = html.replace('üé¨üçøüé•üéûÔ∏èü§©', '!<')

    html = re.sub(r'\*\*(.*?)\*\*', r'<b>\1</b>', html)
    html = re.sub(r'\*(.*?)\*', r'<i>\1</i>', html)
    html = re.sub(r'\~\~(.*?)\~\~', r'<s>\1</s>', html)


    code_pattern = r"```([a-z]+)\n([\s\S]+?)\n```"
    replacement = r"<pre language='\1'>\2</pre>"
    html = re.sub(code_pattern, replacement, html)


    code_pattern = r"\`\`\`([\s\S]*?)\`\`\`"
    replacement = r'<pre>\1</pre>'
    html = re.sub(code_pattern, replacement, html)


    spoiler_pattern = r"\|\|\|([\s\S]*?)\|\|\|"
    replacement = r'<span class="tg-spoiler">\1</span>'
    html = re.sub(spoiler_pattern, replacement, html)

    html = re.sub(r'>!(.*?)!<', r'<span class="tg-spoiler">\1</span>', html)

    html = re.sub(r'\`(.*?)\`', r'<code>\1</code>', html)

    regex = re.compile(r'\[([^\]]+)\]\((https?://[^\)]+)\)')
    html = regex.sub(r'<a href="\2">\1</a>', html)

    return html


if __name__ == '__main__':
    #a = my_dic.PersistentDict('test.pkl')
    
    text = """

[12-06-2023 23:10:03] [GPTChat]: –ö–æ–Ω–µ—á–Ω–æ, –≤–æ—Ç –ø—Ä–∏–º–µ—Ä:
**–∂–∏—Ä–Ω—ã–π**
*–Ω–∞–∫–ª–æ–Ω–Ω—ã–π*
<u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π</u>
~~–ø–µ—Ä–µ—á–µ—Ä–∫–Ω—É—Ç—ã–π~~
`–æ–¥–Ω–æ–π —à–∏—Ä–∏–Ω—ã`
```python
print("Hello, World!")
```
|||—Å–ø–æ–π–ª–µ—Ä (—Å–∫—Ä—ã—Ç—ã–π —Ç–µ–∫—Å—Ç)|||
[—Å—Å—ã–ª–∫–∞](https://www.google.com/) —Å –ø–æ–¥–ø–∏—Å—å—é


[12-06-2023 23:12:31] [BingAI]: –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ Bing. –Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞–º –ø—Ä–∏–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞, –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –í–æ—Ç –æ–Ω–∏:
- **–ñ–∏—Ä–Ω—ã–π**
- *–ù–∞–∫–ª–æ–Ω–Ω—ã–π*
- <u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π</u>
- ~~–ü–µ—Ä–µ—á–µ—Ä–∫–Ω—É—Ç—ã–π~~
- `–û–¥–Ω–æ–π —à–∏—Ä–∏–Ω—ã`
- ```# –ö–æ–¥ –Ω–∞ —è–∑—ã–∫–µ Python
def hello():
    print("–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!")
```
- >!–°–ø–æ–π–ª–µ—Ä (—Å–∫—Ä—ã—Ç—ã–π —Ç–µ–∫—Å—Ç)!<
- [–°—Å—ã–ª–∫–∞ —Å –ø–æ–¥–ø–∏—Å—å—é](https://www.bing.com)

–ß—Ç–æ-—Ç–æ –µ—â–µ —è –º–æ–≥—É –¥–ª—è –≤–∞—Å —Å–¥–µ–ª–∞—Ç—å? üòä

<a href='sfsdf'>asdasd</a>

"""
 
    text = """
[13-06-2023 09:45:19] [BOT]: –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏, —Ç–∞–∫ –∫–∞–∫ –∏—Ö —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ. –û–¥–Ω–∞–∫–æ, —è –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ
–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞:

* **–ñ–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç**: –≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç **–∂–∏—Ä–Ω—ã–º**.
* *–ö—É—Ä—Å–∏–≤–Ω—ã–π —à—Ä–∏—Ñ—Ç*: –≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç *–∫—É—Ä—Å–∏–≤–Ω—ã–º*.
* –ü–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç: –≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç <u>–ø–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–º</u>.
* ~~–ó–∞—á—ë—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç~~: –≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç ~~–∑–∞—á—ë—Ä–∫–Ω—É—Ç—ã–º~~.
* `–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç`: –≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç `–º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–º`.

–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –º–æ–∂–Ω–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏ —Ç–∏–ø—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–∫–æ–π —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç ***–∂–∏—Ä–Ω—ã–º –∏ –∫—É—Ä—Å–∏–≤–Ω—ã–º***.
"""
 
    #text = """'–ø—Ä–∏–≤–µ—Ç –∫ÔøΩÔøΩ–∫ –¥–µ–ª–∞ ("tesd<\*__t text)"""
    #print(escape_markdown(text))

    print(html(text))